from src.model import Userfrom src.controller.role import RoleControllerimport shafrom google.appengine.ext import dbclass UserController:	@staticmethod	def getUsers():		users = User.all()		return users			@staticmethod	def getUser(id):		user = User.get_by_id(id)		return user			@staticmethod	def deleteUser(id):		user = UserController.getUser(int(id))		if user:			user.delete()						return True		else: return False			@staticmethod	def updateUser(uuser=None):		if uuser is not None:			try:				psha = sha.new()				psha.update(uuser.pword)								user = UserController.getUser(int(uuser.id))				user.pword = psha.hexdigest()				user.role = RoleController.getRole(int(uuser.role))				user.put()								return True			except db.TransactionFailedError:				return False		else:			return False		@staticmethod		def addUser(auser=None):		if auser is not None:			try:				psha = sha.new()				psha.update(auser.pword)								user=User(uname=auser.uname, pword=psha.hexdigest(), role=RoleController.getRole(int(auser.role)))				user.put()								return True			except db.TransactionFailedError:				return False		else:			return False